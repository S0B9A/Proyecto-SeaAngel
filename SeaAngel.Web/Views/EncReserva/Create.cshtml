@using SeaAngel.Web.ViewModels
@model SeaAngel.Application.DTOs.EncReservaDTO

@{
	ViewData["Title"] = "Create";
}


<style>
	ul.ui-autocomplete {
		z-index: 1100;
	}

	.form-control:focus {
		border-color: #0d6efd;
		box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
	}

	.card-header-blue {
		background: linear-gradient(135deg, #1e88e5 0%, #0d47a1 100%);
		color: white;
		border-radius: 8px 8px 0 0;
	}

	.btn-primary {
		background: linear-gradient(135deg, #1e88e5 0%, #0d47a1 100%);
		border: none;
		transition: all 0.3s;
	}

		.btn-primary:hover {
			transform: translateY(-2px);
			box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
		}

	.custom-card {
		border: none;
		border-radius: 12px;
		overflow: hidden;
		transition: all 0.3s;
		box-shadow: 0 10px 20px rgba(0, 51, 102, 0.1);
	}

	.form-label {
		margin-bottom: 0.5rem;
		font-weight: 600;
		color: #0d47a1;
	}

	.modal-content {
		border: none;
		border-radius: 12px;
		overflow: hidden;
	}
</style>

<div class="container-fluid py-5 mt-5">
	<div class="row justify-content-center">
		<!-- Formulario principal (9 columnas) -->
		<div class="col-lg-9">
			<div class="card border-0 shadow-lg rounded-3 overflow-hidden">
				<div class="card-header bg-gradient py-4" style="background: linear-gradient(135deg, #1e88e5 0%, #0d47a1 100%);">
					<h4 class="mb-0 text-black text-center fw-bold">
						<i class="fas fa-calendar-alt me-2"></i> Crear Reserva
					</h4>
				</div>

				<div class="card-body p-4">
					<form asp-action="Create" id="myForm" data-ajax="true" data-ajax-method="POST" data-ajax-begin="onBegin"
						  data-ajax-failure="onFailure" data-ajax-success="onSuccess" data-ajax-complete="onComplete"
						  asp-antiforgery="true" enctype="multipart/form-data">

						<div class="mb-4 p-4 bg-white shadow rounded-3">
							<h5 class="fw-bold text-primary mb-3">
								<i class="fas fa-ship me-2"></i> Crucero Seleccionado
							</h5>

							<div class="d-flex align-items-center">
								<!-- Imagen del crucero -->
								<div class="me-3">
									@if (ViewBag.Crucero.Foto != null && ViewBag.Crucero.Foto.Length > 0)
									{
										<img src="data:image/jpeg;base64,@Convert.ToBase64String(ViewBag.Crucero.Foto)"
											 class="rounded shadow-sm" style="width: 150px; height: 100px; object-fit: cover;"
											 alt="@ViewBag.Crucero.Nombre">
									}
									else
									{
										<div class="bg-light d-flex align-items-center justify-content-center rounded shadow-sm"
											 style="width: 150px; height: 100px;">
											<i class="fas fa-ship text-secondary fa-2x"></i>
										</div>
									}
								</div>

								<!-- Información del crucero -->
								<div>
									<h6 class="fw-bold text-dark">@ViewBag.Crucero.Nombre</h6>
									<p class="text-muted mb-1"><i class="fas fa-calendar-day me-1"></i> Duración: @ViewBag.Crucero.CantDias días</p>
									<small class="text-muted">
										<i class="fas fa-anchor me-1"></i> Barco asignado: @(ViewBag.Crucero.IdbarcoNavigation?.Nombre ?? "No asignado")
									</small>
								</div>
							</div>

							<hr class="my-3">


							<div class="form-group mb-3">
								<!-- Fecha de inicio -->
								<label for="fechaInicio" class="fw-bold text-primary">Fecha de inicio del crucero:</label>
								<input type="text" id="fechaInicio" class="form-control border-0 shadow-sm rounded-3 ps-3"
									   style="height: 50px;" readonly value="@ViewBag.fecha.FechaInicio.ToString("dd-MM-yyyy")">

								<!-- Fecha de inicio id oculto -->
								<input asp-for="Idfecha" class="form-control rounded-3 border-0 shadow-sm" type="hidden" id="idfecha" value="@ViewBag.fecha.Id" />

							</div>

							<div class="form-group mb-3">
								<label asp-for="FechaCreacion" class="fw-bold text-primary"> Fecha de creacion de reserva</label>
								<input asp-for="FechaCreacion" type="text" class="form-control border-0 shadow-sm rounded-3 ps-3" value="@DateTime.Today.ToString("dd-MM-yyyy")" style="height: 50px;" readonly />
								<span asp-validation-for="FechaCreacion" class="text-danger"></span>
							</div>

							<div class="form-group mb-3">
								<label asp-for="CantidadDePasajeros" class="form-label">
									<i class="fas fa-users text-primary me-2"></i>Cantidad de pasajeros
								</label>
								<input asp-for="CantidadDePasajeros" class="form-control rounded-3 border-0 shadow-sm" placeholder="Cantidad de pasajeros" style="height: 50px;" />
								<span asp-validation-for="CantidadDePasajeros" class="text-danger mt-1 d-block"></span>
							</div>

							<div class="form-group mb-3">
								<label asp-for="CantidadDeCamarotes" class="form-label">
									<i class="fas fa-bed text-primary me-2"></i>Cantidad de habitaciones
								</label>
								<input asp-for="CantidadDeCamarotes" class="form-control rounded-3 border-0 shadow-sm" placeholder="Cantidad de habitaciones" style="height: 50px;" />
								<span asp-validation-for="CantidadDeCamarotes" class="text-danger mt-1 d-block"></span>
							</div>
						</div>

						<div class="d-flex align-items-center gap-3 mb-5 mt-5">
							<button type="button" class="btn btn-primary py-3 px-4 rounded-3 shadow" data-bs-toggle="modal" data-bs-target="#myModal">
								<i class="fas fa-plus-circle me-2"></i>Agregar Habitación
							</button>

							<span class="text-muted fst-italic">Añada habitaciones disponibles para tu reserva</span>
						</div>

						<div class="card shadow-sm rounded-3 border-0">
							<div class="card-body p-0">
								<div class="mt-2" id="detReservaView">
									@await Html.PartialAsync("_DetailDetReserva")
								</div>
							</div>
						</div>

						<div class="d-flex align-items-center gap-3 mb-5 mt-5">
							<button type="button" class="btn btn-primary py-3 px-4 rounded-3 shadow" data-bs-toggle="modal" data-bs-target="#myModalPasajero">
								<i class="fas fa-plus-circle me-2"></i>Agregar Pasajeros
							</button>

							<span class="text-muted fst-italic">Añada Pasajeros para tu reserva</span>
						</div>

						<div class="card shadow-sm rounded-3 border-0">
							<div class="card-body p-0">
								<div class="mt-2" id="detPasajeroView">
									@await Html.PartialAsync("_DetailDetPasajero")
								</div>
							</div>
						</div>

						<div class="d-flex align-items-center gap-3 mb-5 mt-5">
							<button type="button" class="btn btn-primary py-3 px-4 rounded-3 shadow" data-bs-toggle="modal" data-bs-target="#myModalComplemento">
								<i class="fas fa-plus-circle me-2"></i>Agregar Complementos
							</button>

							<span class="text-muted fst-italic">Añada Complementos para tu reserva</span>
						</div>

						<div class="card shadow-sm rounded-3 border-0">
							<div class="card-body p-0">
								<div class="mt-2" id="detComplementoView">
									@await Html.PartialAsync("_DetailReservaComplemento")
								</div>
							</div>
						</div>
						<!-- Resto de campos del formulario -->
						<!-- ... -->


						<div class="d-flex justify-content-between align-items-center mt-4 pt-3 border-top">
							<a asp-action="Index" class="btn btn-outline-secondary rounded-3 py-2 px-4">
								<i class="fas fa-arrow-left me-2"></i>Regresar al listado
							</a>
							<input type="submit" value="Pagar Reserva" class="btn btn-primary rounded-3 py-2 px-4" />
						</div>
					</form>
				</div>
			</div>
		</div>

		<!-- Resumen simple (3 columnas) -->
		<div class="col-lg-3">
			<div class="card border-0 shadow-sm rounded-3 sticky-top" style="top: 20px;">
				<div class="card-header bg-primary text-white">
					<h5 class="mb-0 fw-bold">
						<i class="fas fa-check-circle me-2"></i> Resumen
					</h5>
				</div>
				<div class="card-body">
					<div id="resumen-crucero-container" class="alert alert-light border rounded-3 p-3">
						<!-- Nombre del crucero -->
						<h6 class="fw-bold text-dark mb-2">
							<i class="fas fa-ship me-2"></i> @ViewBag.Crucero.Nombre
						</h6>

						<!-- Fecha de inicio -->
						<p class="mb-0 text-muted">
							<i class="fas fa-calendar-day me-2"></i> Fecha de inicio:
							<span class="fw-bold">@ViewBag.fecha.FechaInicio.ToString("dd-MM-yyyy")</span>
						</p>

						<!-- Fecha de fin -->
						<p class="mb-0 text-muted">
							<i class="fas fa-calendar-day me-2"></i> Fecha fin:
							<span class="fw-bold">@(ViewBag.fecha.FechaInicio?.AddDays(@ViewBag.Crucero.CantDias).ToString("dd-MM-yyyy") ?? "N/A")</span>
						</p>


						<!-- Puerto de inicio -->
						<p class="mb-0 text-muted">
							<i class="fas fa-calendar-day me-2"></i> Puerto de inicio:
							<span class="fw-bold"> @ViewBag.PrimerPuerto.IdpuertoNavigation.Nombre</span>
						</p>

						<!-- Puerto de salida -->
						<p class="mb-0 text-muted">
							<i class="fas fa-calendar-day me-2"></i> Puerto de salida:
							<span class="fw-bold"> @ViewBag.UltimoPuerto.IdpuertoNavigation.Nombre</span>
						</p>
					</div>
					<div class="card shadow-sm rounded-3 border-0 alert alert-light border rounded-3 p-3">
						<div class="card-body p-0">
							<div class="mt-2" id="ResumenView">
								@await Html.PartialAsync("_DetailResumen", new SeaAngel.Application.DTOs.EncReservaDTO
   {
	   DetReserva = new List<SeaAngel.Application.DTOs.DetReservaDTO>(),
	   ReservaComplementos = new List<SeaAngel.Application.DTOs.ReservaComplementosDTO>()
   })
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

	</div>
</div>

<!-- Modal Habitaciones -->
<div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-xl">
		<div class="modal-content shadow-lg">
			<div class="modal-header card-header-blue py-3">
				<h1 class="modal-title fs-4 fw-bold" id="exampleModalLabel">
					<i class="fas fa-bed me-2"></i>Reserva de Habitaciones
				</h1>
				<button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body p-4">
				<div id="mostrar"></div>
				<div class="p-4 rounded-3 shadow-sm" style="background: #f8f9fa;">
					@await Html.PartialAsync("_AddHabitacion")
				</div>
			</div>
			<div class="modal-footer py-3">
				<button type="button" class="btn btn-secondary rounded-3 py-2 px-4" data-bs-dismiss="modal">
					<i class="fas fa-times me-2"></i>Cerrar
				</button>
			</div>
		</div>
	</div>
</div>

<!-- Modal Pasajeros -->
<div class="modal fade" id="myModalPasajero" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-xl">
		<div class="modal-content shadow-lg">
			<div class="modal-header card-header-blue py-3">
				<h1 class="modal-title fs-4 fw-bold" id="exampleModalLabel">
					<i class="fas fa-bed me-2"></i>Reserva de Pasajeros
				</h1>
				<button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body p-4">
				<div id="mostrar"></div>
				<div class="p-4 rounded-3 shadow-sm" style="background: #f8f9fa;">
					@await Html.PartialAsync("_AddPasajero")
				</div>
			</div>
			<div class="modal-footer py-3">
				<button type="button" class="btn btn-secondary rounded-3 py-2 px-4" data-bs-dismiss="modal">
					<i class="fas fa-times me-2"></i>Cerrar
				</button>
			</div>
		</div>
	</div>
</div>

<!-- Modal Complementos -->
<div class="modal fade" id="myModalComplemento" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-xl">
		<div class="modal-content shadow-lg">
			<div class="modal-header card-header-blue py-3">
				<h1 class="modal-title fs-4 fw-bold" id="exampleModalLabel">
					<i class="fas fa-bed me-2"></i>Reserva de complementos
				</h1>
				<button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body p-4">
				<div id="mostrar"></div>
				<div class="p-4 rounded-3 shadow-sm" style="background: #f8f9fa;">
					@await Html.PartialAsync("_AddComplemento")
				</div>
			</div>
			<div class="modal-footer py-3">
				<button type="button" class="btn btn-secondary rounded-3 py-2 px-4" data-bs-dismiss="modal">
					<i class="fas fa-times me-2"></i>Cerrar
				</button>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script>

					$(document).ready(function () {
			function actualizarResumen() {
				// Obtener los valores de los campos
				var cantidadPasajeros = $("#CantidadDePasajeros").val();
				var cantidadCamarotes = $("#CantidadDeCamarotes").val();

				// Verifica si los campos no están vacíos
				cantidadPasajeros = cantidadPasajeros ? cantidadPasajeros : 0;
				cantidadCamarotes = cantidadCamarotes ? cantidadCamarotes : 0;

				// Obtener valores desde ViewBag usando Razor
				var nombreCrucero = "@ViewBag.Crucero.Nombre";
				var fechaInicio = "@ViewBag.fecha.FechaInicio.ToString("dd-MM-yyyy")";
				var fechaFin = "@(ViewBag.fecha.FechaInicio?.AddDays(ViewBag.Crucero.CantDias).ToString("dd-MM-yyyy") ?? "N/A")";
				var puertoInicio = "@ViewBag.PrimerPuerto.IdpuertoNavigation.Nombre";
				var puertoSalida = "@ViewBag.UltimoPuerto.IdpuertoNavigation.Nombre";

				// Crear el HTML del resumen actualizado
				var resumenHTML = `
					<h6 class="fw-bold text-dark mb-2">
						<i class="fas fa-ship me-2"></i> ${nombreCrucero}
					</h6>
					<p class="mb-0 text-muted">
						<i class="fas fa-calendar-day me-2"></i> Fecha de inicio:
						<span class="fw-bold">${fechaInicio}</span>
					</p>

					<p class="mb-0 text-muted">
						<i class="fas fa-calendar-day me-2"></i> Fecha fin:
						<span class="fw-bold">${fechaFin}</span>
					</p>

					<p class="mb-0 text-muted">
						<i class="fas fa-calendar-day me-2"></i> Puerto de inicio:
						<span class="fw-bold">${puertoInicio}</span>
					</p>

					<p class="mb-0 text-muted">
						<i class="fas fa-calendar-day me-2"></i> Puerto de salida:
						<span class="fw-bold">${puertoSalida}</span>
					</p>

					<p class="mb-0 text-muted">
						<i class="fas fa-users me-2"></i> Pasajeros:
						<span class="fw-bold">${cantidadPasajeros}</span>
					</p>
					<p class="mb-0 text-muted">
						<i class="fas fa-bed me-2"></i> Habitaciones:
						<span class="fw-bold">${cantidadCamarotes}</span>
					</p>
					
				`;

				// Actualizar el contenedor con el HTML generado
				$("#resumen-crucero-container").html(resumenHTML);
			}

			// Detectar cambios en los campos de entrada y actualizar el resumen
			$("#CantidadDePasajeros, #CantidadDeCamarotes").on("input", function () {
				actualizarResumen();
			});
		});



			$("#IdhabitacionModal").autocomplete({
			source: function (request, response) {
				$.ajax({
					type: "GET",
					url: '@Url.Action("GetHabitacionByNameAndFecha", "Habitacion")',
					dataType: "json",
					data: {
						filtro: $("#IdhabitacionModal").val(),
						fechaId: $("#idfecha").val() // Corregido
					},
					success: function (data) {
						response($.map(data, function (item) {
							return { label: item.nombre, value: item.id, data: item };
						}));
					},
					error: function (xhr, status, error) {
						console.log(error);
					},
				});
			},
			select: function (event, ui) {
				$("#IdhabitacionModal").val(ui.item.data.id);
				$("#HabitacionSelect").html("Habitación: " + ui.item.data.nombre);
				$("#DescripcionSelect").html("Descripción: " + ui.item.data.descripcion);
				$("#ImgHabitacion").attr("src", "data:image/jpeg;base64," + ui.item.data.foto);
				return false;
			}
		});


		//Habitacion
			function addHabitacion() {
			let IdhabitacionModal = $("#IdhabitacionModal").val();
			let CantidadPasajerosModal = $("#CantidadPasajerosModal").val();
			let idfechaModal = $("#idfecha").val();
			let divDetReserva = $("#detReservaView");
			let divResumen = $("#ResumenView");


			if (!$.isNumeric(IdhabitacionModal) || !$.isNumeric(CantidadPasajerosModal) || parseInt(CantidadPasajerosModal) <= 0) {
				Swal.fire({
					title: "Error!",
					text: "Ingrese un código y una cantidad válida.",
					icon: "error"
				});
				return;
			}

		const myRequest = '@Url.Action("AddHabitacion", "EncReserva")';


		fetch(myRequest + "?id=" + IdhabitacionModal + "&cantidad=" + CantidadPasajerosModal + "&idfecha=" + idfechaModal)
		.then(response => {
			if (!response.ok) {
				// Si la respuesta no es OK (200-299), leemos el mensaje de error
				return response.text().then(text => {
					throw new Error(text || 'Error desconocido');
				});
			}
			return response.text();
		})
		.then(text => {
			divDetReserva.html(text);
			// Solo si el primer fetch tuvo éxito, ejecutamos el segundo
			const myRequest2 = '@Url.Action("Resumen", "EncReserva")';
			return fetch(myRequest2);
		})
		.then(response => {
			if (!response.ok) {
				return response.text().then(text => {
					throw new Error(text || 'Error desconocido');
				});
			}
			return response.text();
		})
		.then(text => divResumen.html(text))
		.catch(error => {
			Swal.fire({
				title: "Error",
				text: error.message,
				icon: "error"
			});
		});


			$("#IdhabitacionModal").val("");
			$("#CantidadPasajerosModal").val("");
			$("#HabitacionSelect").html("");
			$("#DescripcionSelect").html("");
			$("#ImgHabitacion").attr("src", "/Images/Logo2.png");
		}


			function deleteHabitacion(idhabitacion, cantidadPasajeros) {
			const divReserva = $("#detReservaView");
			const divResumen = $("#ResumenView");
			const myRequest = '@Url.Action("DeleteHabitacion", "EncReserva")';

			fetch(myRequest + "?idHabitacion=" + idhabitacion + "&cantidadPasajeros=" + cantidadPasajeros)
				.then(response => response.text())
				.then(text => {
					divReserva.html(text);

					// Después de que se actualiza la reserva, hacemos la segunda solicitud
					const myRequest2 = '@Url.Action("Resumen", "EncReserva")';
					return fetch(myRequest2);
				})
				.then(response => {
					if (!response.ok) {
						return response.text().then(text => {
							throw new Error(text || 'Error desconocido');
						});
					}
					return response.text();
				})
				.then(text => divResumen.html(text))
				.catch(error => {
					Swal.fire({
						title: "Error",
						text: error.message || error,
						icon: "error"
					});
				});
		}



		//Pasajero

			function AddPasajero() {
			let NombrePasajero = $("#NombrePasajeroModal").val();
			let ApellidoPasajero = $("#ApelldioPasajeroModal").val();
			let DocumentoIdentidad = $("#DocumentoIdentidadModal").val();
			let Email = $("#EmailModal").val();
			let Telefono = $("#TelefonoModal").val();
			let divDetPasajero = $("#detPasajeroView");

			// Validación básica
			if (!NombrePasajero || !ApellidoPasajero || !DocumentoIdentidad || !Email || !Telefono) {
				Swal.fire({
					title: "Error!",
					text: "Por favor complete todos los campos requeridos.",
					icon: "error"
				});
				return;
			}

			const myRequest = '@Url.Action("AddPasajero", "EncReserva")';
			fetch(myRequest + "?Nombre=" + NombrePasajero +
							  "&Apelldio=" + ApellidoPasajero +
							  "&DocumentoIdentidad=" + DocumentoIdentidad +
							  "&Email=" + Email +
							  "&Telefono=" + Telefono)
				.then(response => {
					if (!response.ok) {
						return response.text().then(text => {
							throw new Error(text || 'Error desconocido');
						});
					}
					return response.text();
				})
				.then(text => divDetPasajero.html(text))
				.catch(error => {
					Swal.fire({
						title: "Error",
						text: error.message,
						icon: "error"
					});
				});

			// Limpiar campos después de agregar
			$("#NombrePasajeroModal").val("");
			$("#ApelldioPasajeroModal").val("");
			$("#DocumentoIdentidadModal").val("");
			$("#EmailModal").val("");
			$("#TelefonoModal").val("");
		}


		function DeletePasajero(DocumentoIdentidad) {
		const divDetPasajero = $("#detPasajeroView");
		const myRequest = '@Url.Action("DeletePasajero", "EncReserva")';

		fetch(myRequest + "?DocumentoIdentidad=" + DocumentoIdentidad)
			.then(response => response.text())
			.then(text => divDetPasajero.html(text))
			.catch(error => Swal.fire({ title: "Error", text: error, icon: "error" }));
		}

				//Complemento

		$("#IdComplementoModal").autocomplete({
			source: function (request, response) {
				$.ajax({
					type: "GET",
					url: '@Url.Action("GetComplementoByName", "EncReserva")',
					dataType: "json",
					data: {
						filtro: $("#IdComplementoModal").val()
					},
					success: function (data) {
						console.log("Datos recibidos:", data);
						response($.map(data, function (item) {
							return { label: item.nombre, value: item.id, data: item };

						}));
					},
					error: function (xhr, status, error) {
						console.log(error);
					}
				});
			},
			select: function (event, ui) {
				$("#IdComplementoModal").val(ui.item.data.id);
				$("#ComplementoSelect").html("Complemento: " + ui.item.data.nombre);
				$("#AplicacionSelect").html("Aplicación: " + ui.item.data.aplicacion);
				$("#PrecioSelect").html("Descripción: " + ui.item.data.descripcion);

				return false;
			}
		});


			function addComplemento() {
			let IdComplementoModal = $("#IdComplementoModal").val();
			let CantidadModal = $("#CantidadModal").val();
			let divReservaComplemento = $("#detComplementoView");
			const divResumen = $("#ResumenView");

			if (!$.isNumeric(IdComplementoModal) || !$.isNumeric(CantidadModal) || parseInt(CantidadModal) <= 0) {
				Swal.fire({
					title: "Error!",
					text: "Ingrese un código y una cantidad válida.",
					icon: "error"
				});
				return;
			}

			const myRequest = '@Url.Action("AddComplemento", "EncReserva")';
			fetch(myRequest + "?id=" + IdComplementoModal + "&cantidad=" + CantidadModal)
				.then(response => {
					if (!response.ok) {
						return response.text().then(text => {
							throw new Error(text || 'Error desconocido');
						});
					}
					return response.text();
				})
				.then(text => {
					divReservaComplemento.html(text);

					// Después de la primera solicitud, realizamos la segunda
					const myRequest2 = '@Url.Action("Resumen", "EncReserva")';
					return fetch(myRequest2);
				})
				.then(response => {
					if (!response.ok) {
						return response.text().then(text => {
							throw new Error(text || 'Error desconocido');
						});
					}
					return response.text();
				})
				.then(text => divResumen.html(text))
				.catch(error => {
					Swal.fire({
						title: "Error",
						text: error.message || error,
						icon: "error"
					});
				});

			$("#IdComplementoModal").val("");
			$("#CantidadModal").val("");
			$("#ComplementoSelect").html("");
			$("#DescripcionSelect").html("");
			$("#AplicacionSelect").html("");
		}

		function DeleteComplemento(idComplemento) {
			const divReservaComplemento = $("#detComplementoView");
			const divResumen = $("#ResumenView");
			const myRequest = '@Url.Action("DeleteComplemento", "EncReserva")';

			fetch(myRequest + "?idComplemento=" + idComplemento)
				.then(response => response.text())
				.then(text => {
					divReservaComplemento.html(text);

					// Después de la primera solicitud, realizamos la segunda
					const myRequest2 = '@Url.Action("Resumen", "EncReserva")';
					return fetch(myRequest2);
				})
				.then(response => {
					if (!response.ok) {
						return response.text().then(text => {
							throw new Error(text || 'Error desconocido');
						});
					}
					return response.text();
				})
				.then(text => divResumen.html(text))
				.catch(error => {
					Swal.fire({
						title: "Error",
						text: error.message || error,
						icon: "error"
					});
				});
		}




		function onBegin() { console.log("onBegin"); }
		function onFailure(response) { Swal.fire({ title: "Error!", text: response.responseText, icon: "error" }); }
		function onSuccess(response) {
			$("#myForm")[0].reset();
			// $("#barcoHabitacionView").html("");
			Swal.fire({
				icon: "success",
				title: "Reserva salvado",
				showConfirmButton: true
			}).then(() => {
				setTimeout(() => {
					window.location.href = '@Url.Action("PagoReserva", "EncReserva")';
				}, 2000); // Espera 2000 ms (2 segundos) antes de redirigir
			});
		}
		function onComplete() { console.log("Fin del proceso"); }
	</script>
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}