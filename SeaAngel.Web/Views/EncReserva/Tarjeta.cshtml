@model SeaAngel.Application.DTOs.EncReservaDTO

@{
    ViewData["Title"] = "Tarjeta";
    int pasajeros = int.Parse(Model.CantidadDePasajeros);
    decimal precio = decimal.Parse(Model.PrecioTotal);
    decimal precioPendiente = decimal.Parse(Model.PrecioPendiente);
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">

<style>
    :root {
        --bs-primary: #0d6efd;
        --bs-primary-rgb: 13, 110, 253;
        --bs-secondary: #b45309;
        --bs-secondary-rgb: 180, 83, 9;
        --bs-dark-blue: #1e3a8a;
        --bs-light-blue: #dbeafe;
        --bs-amber: #b45309;
        --bs-amber-light: #fef3c7;
    }

    body {
        background-color: #f8f9fa;
        color: #212529;
    }

    .container-with-margins {
        max-width: calc(100% - 200px);
        margin-left: auto;
        margin-right: auto;
        width: 100%;
    }
    /* Header styles */
    .page-header {
        background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%);
        padding: 3rem 0;
        position: relative;
        overflow: hidden;
        margin-bottom: 2rem;
    }

        .page-header::before {
            content: "";
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 60%);
            pointer-events: none;
        }

        .page-header .container {
            position: relative;
            z-index: 1;
        }

    .header-shape {
        position: absolute;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
    }

    .header-shape-1 {
        width: 300px;
        height: 300px;
        top: -150px;
        left: -100px;
    }

    .header-shape-2 {
        width: 200px;
        height: 200px;
        bottom: -100px;
        right: -50px;
    }

    .header-shape-3 {
        width: 100px;
        height: 100px;
        top: 20%;
        right: 20%;
        background: rgba(180, 83, 9, 0.15);
    }

    /* Card styles */
    .card {
        border: none;
        border-radius: 1rem;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
        }

    .card-header {
        border-bottom: none;
        padding: 1.5rem;
    }

    .card-header-primary {
        background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%);
        color: white;
    }

    .card-header-secondary {
        background: linear-gradient(135deg, #b45309 0%, #92400e 100%);
        color: white;
    }

    .card-body {
        padding: 1.5rem;
    }

    /* Summary card styles */
    .summary-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    .summary-label {
        font-weight: 500;
        color: #6c757d;
    }

    .summary-value {
        background-color: #f8f9fa;
        padding: 0.25rem 0.75rem;
        border-radius: 1rem;
        font-size: 0.875rem;
    }

    .status-badge {
        display: inline-flex;
        align-items: center;
        padding: 0.25rem 0.75rem;
        border-radius: 1rem;
        font-size: 0.75rem;
        font-weight: 500;
        background-color: #e6f2ff;
        color: #0d6efd;
    }

    .status-indicator {
        display: inline-block;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background-color: #0d6efd;
        margin-right: 0.5rem;
        animation: pulse 2s infinite;
    }

    

    .passenger-avatars {
        display: flex;
    }

    .passenger-avatar {
        width: 24px;
        height: 24px;
        border-radius: 50%;
        background-color: #e9ecef;
        border: 1px solid white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.7rem;
        color: #6c757d;
        margin-left: -4px;
    }

        .passenger-avatar:first-child {
            margin-left: 0;
        }

    .price-summary {
        margin-top: 1.5rem;
    }

    .price-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 0.5rem;
        font-size: 0.875rem;
    }

    .price-total {
        display: flex;
        justify-content: space-between;
        font-weight: 700;
        margin-top: 0.5rem;
        font-size: 1.125rem;
    }

    .price-note {
        display: flex;
        justify-content: space-between;
        font-size: 0.75rem;
        color: #b45309;
        margin-top: 0.25rem;
    }

    /* Progress bar */
    .payment-progress {
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px dashed #dee2e6;
    }

    .progress {
        height: 0.5rem;
        border-radius: 1rem;
        background-color: #e9ecef;
        margin-bottom: 0.5rem;
    }

    .progress-bar {
        background-color: #b45309;
        border-radius: 1rem;
        transition: width 0.5s ease-in-out;
    }

    .progress-steps {
        display: flex;
        justify-content: space-between;
        font-size: 0.75rem;
        color: #6c757d;
    }

    /* Payment options */
    .payment-option {
        border: 2px solid #dee2e6;
        border-radius: 0.75rem;
        padding: 1.25rem;
        margin-bottom: 1rem;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .payment-option:hover {
            border-color: #b45309;
            background-color: #fff8ed;
        }

        .payment-option.selected {
            border-color: #b45309;
            background-color: #fff8ed;
            box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.05);
        }

    .payment-option-title {
        font-weight: 600;
        display: flex;
        align-items: center;
    }

    .payment-option-description {
        margin-top: 0.25rem;
        color: #6c757d;
    }

    .payment-option-note {
        display: flex;
        align-items: center;
        margin-top: 0.5rem;
        font-size: 0.875rem;
        color: #b45309;
        font-weight: 500;
    }

    .payment-option-info {
        margin-top: 0.75rem;
        padding: 0.75rem;
        border-radius: 0.5rem;
        background-color: #fff8ed;
        border: 1px solid #fde68a;
        font-size: 0.875rem;
        color: #92400e;
        display: none;
    }

    .payment-option.selected .payment-option-info {
        display: block;
    }

    /* Step indicator */
    .step-indicator {
        display: flex;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .step-number {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 2rem;
        height: 2rem;
        border-radius: 50%;
        background-color: #e6f2ff;
        color: #0d6efd;
        font-weight: 600;
        margin-right: 0.75rem;
    }

    .step-title {
        font-weight: 600;
        font-size: 1.125rem;
        color: #212529;
    }

    /* Credit card */
    .credit-card-container {
        perspective: 1000px;
        max-width: 400px;
        height: 220px;
        margin: 0 auto 2rem;
    }

    .credit-card {
        position: relative;
        width: 100%;
        height: 100%;
        transition: transform 0.6s;
        transform-style: preserve-3d;
    }

        .credit-card.flipped {
            transform: rotateY(180deg);
        }

    .credit-card-front, .credit-card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        backface-visibility: hidden;
        border-radius: 1rem;
        padding: 1.5rem;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }

    .credit-card-front {
        background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%);
        color: white;
    }

    .credit-card-back {
        background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%);
        color: white;
        transform: rotateY(180deg);
    }

    .credit-card-logo {
        width: 50px;
        height: 30px;
        background: linear-gradient(135deg, #b45309 0%, #92400e 100%);
        border-radius: 4px;
        opacity: 0.9;
    }

    .credit-card-number {
        margin-top: 2rem;
        font-size: 1.25rem;
        letter-spacing: 0.2em;
    }

    .credit-card-info {
        margin-top: 1.5rem;
        display: flex;
        justify-content: space-between;
    }

    .credit-card-info-label {
        font-size: 0.7rem;
        text-transform: uppercase;
        opacity: 0.7;
        margin-bottom: 0.25rem;
    }

    .credit-card-stripe {
        background-color: rgba(0, 0, 0, 0.8);
        height: 40px;
        margin-top: 1.25rem;
    }

    .credit-card-cvv {
        margin-top: 1.25rem;
        background-color: white;
        color: #212529;
        height: 40px;
        border-radius: 4px;
        display: flex;
        align-items: center;
        justify-content: flex-end;
        padding-right: 10px;
    }

    .credit-card-cvv-info {
        margin-top: 1.5rem;
        font-size: 0.75rem;
        opacity: 0.7;
        text-align: center;
    }

    /* Form controls */
    .form-control:focus {
        border-color: #86b7fe;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }

    .input-group-text {
        background-color: #f8f9fa;
    }

    /* Buttons */
    .btn-primary {
        background-color: #1e3a8a;
        border-color: #1e3a8a;
    }

        .btn-primary:hover {
            background-color: #1e40af;
            border-color: #1e40af;
        }

    .btn-secondary {
        background-color: #b45309;
        border-color: #b45309;
        color: white;
        transition: all 0.3s ease;
    }

        .btn-secondary:hover {
            background-color: #92400e;
            border-color: #92400e;
            transform: translateY(-2px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }

    /* Security badges */
    .security-badges {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 1.5rem;
        margin-top: 1.5rem;
    }

    .security-badge {
        display: flex;
        align-items: center;
        color: #6c757d;
        font-size: 0.875rem;
    }

        .security-badge i {
            color: #198754;
            margin-right: 0.5rem;
            font-size: 1rem;
        }

    /* Borders */
    .border-dashed {
        border-style: dashed !important;
    }

    
</style>

<!-- Page Header -->
<div class="page-header text-white">
    <div class="header-shape header-shape-1"></div>
    <div class="header-shape header-shape-2"></div>
    <div class="header-shape header-shape-3"></div>

    <div class="container mt-5">
        <div class="text-center">
            <div class="d-flex align-items-center justify-content-center mb-3">
                <i class="bi bi-ship fs-1 text-warning me-3"></i>
                <h1 class="display-5 fw-bold mb-0">Pago de Reserva</h1>
            </div>
            <p class="lead opacity-75 mx-auto" style="max-width: 600px;">
                Complete el proceso de pago para confirmar su reserva y asegurar su lugar en esta experiencia inolvidable
            </p>
        </div>
    </div>
</div>

<div class="container-with-margins pb-5">
    <div class="row g-4">
        <!-- Reservation Summary -->
        <div class="col-lg-4">
            <div class="card h-100">
                <div class="card-header card-header-secondary">
                    <h2 class="fs-4 fw-semibold mb-1">Resumen de Reserva</h2>
                    <div class="small text-white opacity-75">
                        <p class="mb-0">Propietario: @Model.IdusuarioNavigation.Nombre</p>
                        <p class="mb-0">Correo: @Model.IdusuarioNavigation.CorreoElectronico</p>
                    </div>
                </div>

                <div class="card-body">
                    <div class="mb-4">
                        <div class="summary-item">
                            <span class="summary-label">Fecha de Creación:</span>
                            <span class="summary-value">@Model.FechaCreacion</span>
                        </div>
                        <div class="summary-item">
                            <span class="summary-label">Estado:</span>
                            <span class="status-badge">
                                <span class="status-indicator"></span>
                                @Model.Estado
                            </span>
                        </div>
                        <div class="summary-item">
                            <span class="summary-label">Pasajeros:</span>
                            <div class="passenger-avatars">
                                @for (int i = 0; i < pasajeros; i++)
                                {
                                    <div class="passenger-avatar">@(i + 1)</div>
                                }
                            </div>
                        </div>
                        <div class="summary-item">
                            <span class="summary-label">Camarotes:</span>
                            <span class="summary-value">@Model.CantidadDeCamarotes</span>
                        </div>
                    </div>

                    <hr class="border-dashed">

                    <div class="price-summary">
                        <div class="price-item">
                            <span>Precio Camarotes:</span>
                            <span>$@Model.PrecioTotalCamorotes</span>
                        </div>
                        <div class="price-item">
                            <span>Subtotal:</span>
                            <span>$@Model.Subtotal</span>
                        </div>
                        <div class="price-item">
                            <span>Impuesto:</span>
                            <span>$@Model.Impuesto</span>
                        </div>

                        <hr class="border-dashed my-2">

                        <div class="price-total">
                            <span>Total:</span>
                            <span class="text-primary">$@Model.PrecioTotal</span>
                        </div>
                        <div class="price-note">
                            <span>Depósito mínimo por persona:</span>
                            <span>$100.00</span>
                        </div>
                    </div>

                    <!-- Payment progress -->
                    <div class="payment-progress">
                        <h5 class="fs-6 fw-semibold mb-2">Progreso de pago</h5>
                        <div class="progress">
                            <div class="progress-bar" role="progressbar" style="width: 25%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                        <div class="progress-steps">
                            <span>Inicio</span>
                            <span>Selección</span>
                            <span>Pago</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Payment Form -->
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header card-header-primary">
                    <h2 class="fs-4 fw-semibold mb-1">Opciones de Pago</h2>
                    <p class="small text-white opacity-75 mb-0">Seleccione su método de pago preferido</p>
                </div>

                <div class="card-body">
                    <form asp-action="Edit" id="habitacionForm" data-ajax="true" data-ajax-method="POST" data-ajax-begin="onBegin"
                          data-ajax-failure="onFailure" data-ajax-success="onSuccess" data-ajax-complete="onComplete" asp-antiforgery="true">

                        <!-- Payment Options -->
                        <div class="mb-5">
                            <div class="step-indicator">
                                <div class="step-number">1</div>
                                <div class="step-title">Seleccione una opción de pago</div>
                            </div>

                            <div class="payment-options">
                                @if (precioPendiente==0)
                                {
                                    <div class="payment-option" data-option="full">
                                    <div class="d-flex">
                                        <input asp-for="NuevoPago.Monto" class="form-check-input" type="radio" id="fullPayment" value="@precio">
                                        
                                        <div class="flex-grow-1">
                                            <div class="payment-option-title">
                                                Pagar saldo total
                                                <i class="bi bi-check-circle-fill text-success ms-2 d-none option-check-icon"></i>
                                            </div>
                                            <div class="payment-option-description">
                                                Pague el monto completo de $@Model.PrecioTotal
                                            </div>
                                            <div class="payment-option-info">
                                                <i class="bi bi-check-circle-fill text-success me-2"></i>
                                                Al pagar el saldo total ahora, su reserva quedará completamente confirmada y no tendrá
                                                que preocuparse por pagos adicionales.
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="payment-option" data-option="deposit">
                                    <div class="d-flex">
                                            <input asp-for="NuevoPago.Monto" class="form-check-input" type="radio" id="depositPayment" value="@(pasajeros * 100)">
                                        
                                        <div class="flex-grow-1">
                                            <div class="payment-option-title">
                                                Pagar depósito mínimo
                                                <i class="bi bi-check-circle-fill text-success ms-2 d-none option-check-icon"></i>
                                            </div>
                                            <div class="payment-option-description">
                                                Pague el depósito mínimo de $@(pasajeros * 100) ($100.00 por persona)
                                            </div>
                                            <div class="payment-option-note">
                                                <i class="bi bi-calendar me-2"></i>
                                                Fecha límite para completar el pago: 15/05/2023
                                            </div>
                                            <div class="payment-option-info">
                                                <i class="bi bi-check-circle-fill text-success me-2"></i>
                                                El depósito asegura su reserva. Recuerde completar el pago restante de $@(precio - (pasajeros * 100)) antes de la fecha límite.
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                }
                                <div class="payment-option" data-option="deposit">
                                    <div class="d-flex">
                                            <input asp-for="NuevoPago.Monto" class="form-check-input" type="radio" id="depositPayment" value="@precioPendiente">
                                        
                                        <div class="flex-grow-1">
                                            <div class="payment-option-title">
                                                Pagar monto restante
                                                <i class="bi bi-check-circle-fill text-success ms-2 d-none option-check-icon"></i>
                                            </div>
                                            <div class="payment-option-description">
                                                Pague el monto restante de $@precioPendiente
                                            </div>
                                            <div class="payment-option-note">
                                                <i class="bi bi-calendar me-2"></i>
                                                Fecha límite para completar el pago: 15/05/2023
                                            </div>
                                            <div class="payment-option-info">
                                                <i class="bi bi-check-circle-fill text-success me-2"></i>
                                                El pago asegura su reserva. Debe completar el pago antes de la fecha límite.
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <hr class="border-dashed my-4">

                        <!-- Credit Card Information -->
                        <div class="mb-4">
                            <div class="step-indicator">
                                <div class="step-number">2</div>
                                <div class="step-title">Información de Tarjeta de Crédito</div>
                            </div>

                            <!-- Credit card preview -->
                            <div class="credit-card-container">
                                <div class="credit-card">
                                    <!-- Front of card -->
                                    <div class="credit-card-front">
                                        <div class="d-flex justify-content-between">
                                            <div class="text-white opacity-80 fs-5">Tarjeta de Crédito</div>
                                            <div class="credit-card-logo"></div>
                                        </div>
                                        <div class="credit-card-number" id="cardNumberPreview">•••• •••• •••• ••••</div>
                                        <div class="credit-card-info">
                                            <div>
                                                <div class="credit-card-info-label">Titular</div>
                                                <div id="cardholderNamePreview">NOMBRE DEL TITULAR</div>
                                            </div>
                                            <div>
                                                <div class="credit-card-info-label">Expira</div>
                                                <div id="expiryDatePreview">MM/AA</div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Back of card -->
                                    <div class="credit-card-back">
                                        <div class="credit-card-stripe"></div>
                                        <div class="credit-card-cvv">
                                            <span id="cvvPreview">CVV</span>
                                        </div>
                                        <div class="credit-card-cvv-info">
                                            El código de seguridad está ubicado en la parte posterior de su tarjeta. Es un número de 3 o 4 dígitos.
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row g-3">
                                
                                <div class="col-12">
                                    <label asp-for="NuevoPago.TitularTarjeta" class="form-label">Nombre del Titular</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-person"></i></span>
                                        <input asp-for="NuevoPago.TitularTarjeta" type="text" class="form-control" id="cardholderName"
                                               placeholder="Nombre como aparece en la tarjeta" required>
                                    </div>
                                    <span asp-validation-for="NuevoPago.TitularTarjeta" class="text-danger"></span>
                                </div>

                                <div class="col-12">
                                    <label asp-for="NuevoPago.NumeroTarjeta" class="form-label">Número de Tarjeta</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-credit-card"></i></span>
                                        <input asp-for="NuevoPago.NumeroTarjeta" type="text" class="form-control" id="cardNumber"
                                               placeholder="1234 5678 9012 3456" maxlength="19" required>
                                    </div>
                                    <span asp-validation-for="NuevoPago.NumeroTarjeta" class="text-danger"></span>
                                </div>

                                <div class="col-md-6">
                                    <label asp-for="NuevoPago.FechaExpiracion" class="form-label">Fecha de Caducidad</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-calendar"></i></span>
                                        <input asp-for="NuevoPago.FechaExpiracion" type="month" class="form-control" id="expiryDate" required>
                                    </div>
                                    <span asp-validation-for="NuevoPago.FechaExpiracion" class="text-danger"></span>
                                </div>

                                <div class="col-md-6">
                                    <label asp-for="NuevoPago.Cvv" class="form-label">Código CVV</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-shield-lock"></i></span>
                                        <input asp-for="NuevoPago.Cvv" type="text" class="form-control" id="cvv"
                                               placeholder="123" maxlength="3" required>
                                    </div>
                                    <span asp-validation-for="NuevoPago.Cvv" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex flex-column flex-sm-row justify-content-between gap-3 mt-5">
                            <a href="@Url.Action("Index", "EncReserva")" class="btn btn-outline-secondary d-flex align-items-center">
                                <i class="bi bi-arrow-left me-2"></i>Volver
                            </a>

                            <button type="submit" class="btn btn-secondary px-4 py-2">
                                Pagar Saldo
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript for interactive elements -->
@section Scripts {
    <script>
        function onBegin() { console.log("Inicio de edición"); }
        function onFailure(response) { Swal.fire({ title: "Error!", text: response.responseText, icon: "error" }); }
        function onSuccess(response) {
            Swal.fire({
                icon: "success",
                title: "Pago de reserva hecho",
                showConfirmButton: true
            }).then(() => {
                setTimeout(() => {
                    window.location.href = '@Url.Action("Index", "EncReserva")';
                }, 2000);
            });
        }
        function onComplete() { console.log("Edición completada"); }
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Payment option selection
            const paymentOptions = document.querySelectorAll('.payment-option');
            const paymentRadios = document.querySelectorAll('input[name="paymentOption"]');

            paymentOptions.forEach(option => {
                option.addEventListener('click', function() {
                    const radio = this.querySelector('input[type="radio"]');
                    radio.checked = true;

                    // Remove selected class from all options
                    paymentOptions.forEach(opt => {
                        opt.classList.remove('selected');
                        opt.querySelector('.option-check-icon').classList.add('d-none');
                    });

                    // Add selected class to clicked option
                    this.classList.add('selected');
                    this.querySelector('.option-check-icon').classList.remove('d-none');

                    // Update progress bar
                    updateProgressBar(50);
                });
            });

            paymentRadios.forEach(radio => {
                radio.addEventListener('change', function() {
                    // Remove selected class from all options
                    paymentOptions.forEach(option => {
                        option.classList.remove('selected');
                        option.querySelector('.option-check-icon').classList.add('d-none');
                    });

                    // Add selected class to the parent of the checked radio
                    if (this.checked) {
                        const option = this.closest('.payment-option');
                        option.classList.add('selected');
                        option.querySelector('.option-check-icon').classList.remove('d-none');

                        // Update progress bar
                        updateProgressBar(50);
                    }
                });
            });

            // Credit card flip animation
            const cvvInput = document.getElementById('cvv');
            const creditCard = document.querySelector('.credit-card');

            cvvInput.addEventListener('focus', function() {
                creditCard.classList.add('flipped');
            });

            cvvInput.addEventListener('blur', function() {
                creditCard.classList.remove('flipped');
            });

            // Check if any payment option is already selected (e.g. on page reload)
            paymentRadios.forEach(radio => {
                if (radio.checked) {
                    const option = radio.closest('.payment-option');
                    option.classList.add('selected');
                    option.querySelector('.option-check-icon').classList.remove('d-none');
                }
            });

            // If any payment option is already selected, update progress bar
            if (document.querySelector('.payment-option.selected')) {
                updateProgressBar(50);
            }

            // Dynamic card data update
            const cardholderNameInput = document.getElementById('cardholderName');
            const cardNumberInput = document.getElementById('cardNumber');
            const expiryDateInput = document.getElementById('expiryDate');
            const cvvInputField = document.getElementById('cvv');

            const cardholderNamePreview = document.getElementById('cardholderNamePreview');
            const cardNumberPreview = document.getElementById('cardNumberPreview');
            const expiryDatePreview = document.getElementById('expiryDatePreview');
            const cvvPreview = document.getElementById('cvvPreview');

            // Format card number with spaces
            function formatCardNumber(value) {
                // Remove all non-digit characters
                const v = value.replace(/\D/g, '');
                // Add space after every 4 digits
                const formatted = v.replace(/(\d{4})(?=\d)/g, '$1 ');
                return formatted;
            }

            // Format expiry date from input type="month" (YYYY-MM) to MM/YY
            function formatExpiryDate(value) {
                if (!value) return 'MM/AA';

                const parts = value.split('-');
                if (parts.length !== 2) return 'MM/AA';

                const year = parts[0].slice(2); // Get last 2 digits of year
                const month = parts[1];

                return `${month}/${year}`;
            }

            // Update card holder name
            cardholderNameInput.addEventListener('input', function() {
                cardholderNamePreview.textContent = this.value.toUpperCase() || 'NOMBRE DEL TITULAR';
            });

            // Update card number with formatting
            cardNumberInput.addEventListener('input', function(e) {
                // Format the input value
                const formattedValue = formatCardNumber(this.value);

                // Update the input value with formatting (only if it changed to avoid cursor jumping)
                if (this.value !== formattedValue) {
                    this.value = formattedValue;
                }

                // Update the preview
                if (this.value) {
                    cardNumberPreview.textContent = formattedValue;
                } else {
                    cardNumberPreview.textContent = '•••• •••• •••• ••••';
                }
            });

            // Update expiry date
            expiryDateInput.addEventListener('input', function() {
                expiryDatePreview.textContent = formatExpiryDate(this.value);
            });

            // Update CVV
            cvvInputField.addEventListener('input', function() {
                cvvPreview.textContent = this.value || 'CVV';
            });
        });

        // Function to update progress bar
        function updateProgressBar(percentage) {
            const progressBar = document.querySelector('.progress-bar');
            progressBar.style.width = percentage + '%';
            progressBar.setAttribute('aria-valuenow', percentage);

            // Highlight the current step in the progress steps
            const progressSteps = document.querySelectorAll('.progress-steps span');

            if (percentage >= 50) {
                progressSteps[0].classList.add('fw-bold', 'text-primary');
                progressSteps[1].classList.add('fw-bold', 'text-primary');
                progressSteps[2].classList.remove('fw-bold', 'text-primary');
            } else if (percentage >= 25) {
                progressSteps[0].classList.add('fw-bold', 'text-primary');
                progressSteps[1].classList.remove('fw-bold', 'text-primary');
                progressSteps[2].classList.remove('fw-bold', 'text-primary');
            }
        }
    </script>
}


